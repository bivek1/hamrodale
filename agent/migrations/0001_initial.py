# Generated by Django 3.1 on 2020-11-23 12:05

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('user_type', models.CharField(choices=[(1, 'Admin'), (2, 'Customer')], default=1, max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='advertise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ads_created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('title', models.CharField(default='Property In Sell', max_length=400)),
                ('district', models.CharField(choices=[('Kathmandu', 'Kathmandu'), ('Bhaktapur', 'Bhaktapur'), ('Lalitpur', 'Lalitpur'), ('Makwanpur', 'Makwanpur'), ('Chitwan', 'Chitwan'), ('Dhading', 'Dhading'), ('Dhankuta', 'Dhankuta'), ('Gorkha', 'Gorkha'), ('Jhapa', 'Jhapa'), ('Kaski', 'Kaski'), ('Kavrepalanchok', 'Kavrepalanchok'), ('Sindhupalchok', 'Sindhupalchok'), ('Solukhumbu', 'Solukhumbu'), ('Surkhet', 'Surkhet'), ('Taplejung', 'Taplejung'), ('Other', 'Other')], default='Kathmandu', max_length=100)),
                ('woda', models.IntegerField(default=1)),
                ('location', models.CharField(max_length=400)),
                ('price', models.BigIntegerField()),
                ('price_in_words', models.CharField(max_length=400)),
                ('selling_in', models.CharField(choices=[('Fixed', 'Fixed Price'), ('Bargainable', 'Bragainable')], default='Bargainable', max_length=50)),
                ('images', models.ImageField(blank=True, upload_to='')),
                ('premium', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=20)),
                ('feature', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=20)),
                ('description', models.CharField(blank=True, max_length=5000)),
                ('created_by', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='requestBuy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('dealed', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=20)),
                ('req_ads', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buyrequest', to='agent.advertise')),
                ('req_by', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='rent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rentroom', models.IntegerField()),
                ('bathroom', models.IntegerField()),
                ('internet', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], default='YES', max_length=200)),
                ('garage', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], default='YES', max_length=200)),
                ('tvchannel', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], default='YES', max_length=200)),
                ('objectname', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rent', to='agent.advertise')),
            ],
        ),
        migrations.CreateModel(
            name='land',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('landsize', models.CharField(max_length=200)),
                ('road_size', models.CharField(max_length=200)),
                ('electrivityline', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], default='YES', max_length=200)),
                ('plotting', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], default='YES', max_length=200)),
                ('objectname', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='land', to='agent.advertise')),
            ],
        ),
        migrations.CreateModel(
            name='ImagesAd',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(max_length=255, upload_to='')),
                ('post', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='agent.advertise')),
            ],
        ),
        migrations.CreateModel(
            name='house',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('landsize', models.CharField(max_length=300)),
                ('road_size', models.CharField(max_length=200)),
                ('floor', models.IntegerField()),
                ('bedroom', models.IntegerField()),
                ('bathroom', models.IntegerField()),
                ('kitchen', models.IntegerField()),
                ('face_toward', models.CharField(blank=True, choices=[('East', 'East'), ('West', 'West'), ('North', 'North'), ('South', 'South')], default='East', max_length=200)),
                ('garden', models.CharField(choices=[('Yes', 'YES'), ('No', 'No')], default='Yes', max_length=200)),
                ('garage', models.CharField(choices=[('Yes', 'YES'), ('No', 'No')], default='Yes', max_length=200)),
                ('undergroudTank', models.CharField(choices=[('Yes', 'YES'), ('No', 'No')], default='Yes', max_length=200)),
                ('objectname', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='house', to='agent.advertise')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('profile_pic', models.ImageField(blank=True, upload_to='user_Profile')),
                ('address', models.CharField(max_length=200)),
                ('number', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(max_length=500)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('unread', models.BooleanField(default=True)),
                ('ureadCustomer', models.BooleanField(default=True)),
                ('comment_ads', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment', to='agent.advertise')),
                ('comment_by', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='business',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('businesstype', models.CharField(max_length=200)),
                ('objectname', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='business', to='agent.advertise')),
            ],
        ),
        migrations.CreateModel(
            name='AdminOwner',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
